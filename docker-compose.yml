version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:/app/prisma/prod.db
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-goes-here}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - INGEST_CHALLENGES_AT_STARTUP=${INGEST_CHALLENGES_AT_STARTUP:-true}
      - CHALLENGES_DIR=/challenges
    volumes:
      - sqlite_data:/app/prisma
      - uploads:/app/public/uploads
      - ./challenges:/challenges:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/config || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL for production (optional - uncomment to use)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: orbital_ctf
  #     POSTGRES_USER: ${POSTGRES_USER:-orbital_ctf}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your-postgres-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-orbital_ctf}"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  sqlite_data:
  uploads:
  # postgres_data:  # Uncomment if using PostgreSQL